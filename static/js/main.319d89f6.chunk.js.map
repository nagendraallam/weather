{"version":3,"sources":["icons/sun.png","App.js","index.js"],"names":["App","useState","data","setData","setAqi","returnColor","id","startsWith","useEffect","navigator","geolocation","getCurrentPosition","position","axios","get","coords","latitude","longitude","process","then","res","console","log","description","weather","main","temperature","temp","city","name","country","sys","icon","String","color","list","components","polution","aqi","className","style","backgroundColor","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAe,I,MCuFAA,MAlFf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,IAFtB,mBAEGG,GAFH,WAsCb,SAASC,EAAYC,GACnB,OAAIA,EAAGC,WAAW,MAAQD,EAAGC,WAAW,MAAQD,EAAGC,WAAW,KACrD,UACED,EAAGC,WAAW,KAChB,UACED,EAAGC,WAAW,KAChB,UACED,EAAGC,WAAW,KAChB,UAGF,QAGT,OAhDAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAACC,GACxCC,IACGC,IADH,8DAE2DF,EAASG,OAAOC,SAF3E,gBAE2FJ,EAASG,OAAOE,UAF3G,kBAE8HC,mCAF9H,kBAIGC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIlB,MAChBC,EAAQ,2BACHD,GADE,IAELqB,YAAaH,EAAIlB,KAAKsB,QAAQ,GAAGD,YACjCC,QAASJ,EAAIlB,KAAKsB,QAAQ,GAAGC,KAC7BC,YAAaN,EAAIlB,KAAKuB,KAAKE,KAC3BC,KAAMR,EAAIlB,KAAK2B,KACfC,QAASV,EAAIlB,KAAK6B,IAAID,QACtBE,KAAMZ,EAAIlB,KAAKsB,QAAQ,GAAGQ,KAC1B1B,GAAI2B,OAAOb,EAAIlB,KAAKsB,QAAQ,GAAGlB,IAC/B4B,MAAO7B,EAAY4B,OAAOb,EAAIlB,KAAKsB,QAAQ,GAAGlB,WAGpDO,IACGC,IADH,mEAEgEF,EAASG,OAAOC,SAFhF,gBAEgGJ,EAASG,OAAOE,UAFhH,kBAEmIC,qCAEhIC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIlB,KAAKiC,KAAK,GAAGC,YAC7BhC,EAAO,CACLiC,SAAUjB,EAAIlB,KAAKiC,KAAK,GAAGV,KAAKa,IAChCF,WAAYhB,EAAIlB,KAAKiC,KAAK,GAAGC,qBAIpC,IAiBD,sBAAKG,UAAU,MAAMC,MAAO,CAAEC,gBAAiBvC,EAAKgC,OAApD,UACE,6BACGhC,EAAK0B,KAAO1B,EAAK0B,KAAO,KAAO1B,EAAK4B,QAAU,qBAEjD,qBAAKY,IAAG,2CAAsCxC,EAAK8B,KAA3C,aACR,6BACG9B,EAAKwB,YACFxB,EAAKwB,YAAc,QACnB,yBAEN,6BAAKxB,EAAKsB,QAAUtB,EAAKqB,YAAc,SChE7CoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.319d89f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sun.50199ede.png\";","import axios from \"axios\";\nimport \"./css/App.css\";\nimport { useEffect, useState } from \"react\";\nimport sun from \"./icons/sun.png\";\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [aqiData, setAqi] = useState({});\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      axios\n        .get(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${process.env.REACT_APP_APIKEY}&units=metric`\n        )\n        .then((res) => {\n          console.log(res.data);\n          setData({\n            ...data,\n            description: res.data.weather[0].description,\n            weather: res.data.weather[0].main,\n            temperature: res.data.main.temp,\n            city: res.data.name,\n            country: res.data.sys.country,\n            icon: res.data.weather[0].icon,\n            id: String(res.data.weather[0].id),\n            color: returnColor(String(res.data.weather[0].id)),\n          });\n        });\n      axios\n        .get(\n          `http://api.openweathermap.org/data/2.5/air_pollution?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${process.env.REACT_APP_APIKEY}`\n        )\n        .then((res) => {\n          console.log(res.data.list[0].components);\n          setAqi({\n            polution: res.data.list[0].main.aqi,\n            components: res.data.list[0].components,\n          });\n        });\n    });\n  }, []);\n\n  function returnColor(id) {\n    if (id.startsWith(\"2\") || id.startsWith(\"3\") || id.startsWith(\"5\")) {\n      return \"#8CA1A5\";\n    } else if (id.startsWith(\"6\")) {\n      return \"#B5DEFF\";\n    } else if (id.startsWith(\"7\")) { \n      return \"#F7D59C\";\n    } else if (id.startsWith(\"8\")) {\n      return \"#B5DEFF\";\n    }\n\n    return \"black\";\n  }\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: data.color }}>\n      <h1>\n        {data.city ? data.city + \", \" + data.country : \"Finding location\"}\n      </h1>\n      <img src={`http://openweathermap.org/img/wn/${data.icon}@2x.png`} />\n      <h2>\n        {data.temperature\n          ? data.temperature + \"Â°C\"\n          : \" Getting temperature\"}\n      </h2>\n      <h2>{data.weather ? data.description : \"\"}</h2>\n      {/* <h2>\n        {aqiData.polution ? aqiData.polution : \"getting pollution status\"}\n      </h2>\n      <ul>\n        {aqiData.components\n          ? Object.keys(aqiData.components).map((key, value) => {\n              return (\n                <li key={key}>\n                  {key} : {aqiData.components[key]}\n                </li>\n              );\n            })\n          : \"Getting components\"}\n      </ul> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}